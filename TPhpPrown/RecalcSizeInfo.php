<?php namespace prown;

// PHP7/HTML5, EDGE/CHROME                           *** RecalcSizeInfo.php ***
// ****************************************************************************
// * TPhpPrown               Изменить представление информации о размерности, *
// *            то есть пересчитать число байт в число килобайт или кибибайт, *
// *            мегабайт или мебибайт, ... или пересчитать в обратную сторону *
// *                                                                          *
// * v1.0, 09.09.2021                              Автор:       Труфанов В.Е. *
// * Copyright © 2018 tve                          Дата создания:  08.09.2021 *
// ****************************************************************************

/*
Информация о размерности, заданная в байтах, может быть указана в других 
единицах. Стандарт Международной системы единиц СИ (SI) позволяет пересчитать
размер, заданный в байтах, в другие единицы с учетом десятичной степени
по следующей схеме:

B    байт                 10^0 = 2^0

KB   килобайт   (Кбайт)   10^3      байт/1000
MB   мегабайт   (Mбайт)   10^6      байт/1000000
GB   гигабайт   (Гбайт)   10^9
TB   терабайт   (Tбайт)   10^12
PB   петабайт   (Пбайт)	  10^15
EB   эксабайт   (Эбайт)	  10^18
ZB   зеттабайт  (Збайт)   10^21	
YB   йоттабайт  (Ибайт)   10^24

Информация о размерности, заданная в байтах, в соответствии со стандартами
Международной электротехнической комиссии - МЭК (IEC) может быть указана в 
других единицах с учетом двоичной степени:

KiB  кибибайт             2^10      байт/1024
MiB  мебибайт             2^20      байт/1048576
GiB  гибибайт             2^30           
TiB  тебибайт             2^40
PiB  пебибайт             2^50
EiB  эксбибайт            2^60
ZiB  зебибайт             2^70	
YiB  йобибайт             2^80

Функция RecalcSizeInfo изменяет представление информации о размерности, то есть 
пересчитывает число байт в число килобайт или кибибайт, мегабайт или мебибайт и
так далее или пересчитать размер в обратную сторону. 
*/

// Синтаксис:
//
//   $Result=RecalcSizeInfo($Direct,$Unit,$Size,$Dim=0,$ModeError=rvsTriggerError);

// Параметры:
//
//   $Direct - направление пересчета заданного значения: 
//      cdiToBytes=1 - пересчитать килобайты или кибибайты и т.д. в байты; 
//      cdiFromBytes=2 - пересчитать байты в килобайты или кибибайты, ...;
//   $Unit - единица измерения, от которой нужно произвести расчет в байтах или 
//      к которой нужно привести исходную величину, заданную в байтах. Всего
//      определено 17 единиц B,KB,MB,GB,TB,PB,EB,ZB,YB,KiB,MiB,GiB,TiB,PiB,EiB,ZiB,YiB;
//   $Size - исходная величина, которая требует пересчета;
//   $Dim - точность (количество десятичных разрядов) с которой должен быть 
//      представлен результат (по умолчанию целочисленный результат);
//   $ModeError - режим вывода сообщений об ошибке (по умолчанию через 
//      исключение с пользовательской ошибкой на сайте doortry.ru)

// Возвращаемое значение: 
//
//   $Result - пересчитанное значение размерности
//
// Зарегистрированные ошибки/исключения:
//   
//   ----- ConversNotPossible - "Тип значения указан неверно или преобразование невозможно";

require_once 'iniConstMem.php';
//require_once 'iniErrMessage.php';
//require_once 'MakeUserError.php';

$bunits = array('B',
  'KB',   // 2  килобайт   (Кбайт)   10^3      байт/1000
  'MB',   // 3  мегабайт   (Mбайт)   10^6      байт/1000000
  'GB',   // 4  гигабайт   (Гбайт)   10^9
  'TB',   // 5  терабайт   (Tбайт)   10^12
  'PB',   // 6  петабайт   (Пбайт)   10^15
  'EB',   // 7  эксабайт   (Эбайт)   10^18
  'ZB',   // 8  зеттабайт  (Збайт)   10^21	
  'YB',   // 9  йоттабайт  (Ибайт)   10^24
  'KiB',  // 10 кибибайт             2^10      байт/1024
  'MiB',  // 11 мебибайт             2^20      байт/1048576
  'GiB',  // 12 гибибайт             2^30           
  'TiB',  // 13 тебибайт             2^40
  'PiB',  // 14 пебибайт             2^50
  'EiB',  // 15 эксбибайт            2^60
  'ZiB',  // 16 зебибайт             2^70	
  'YiB'); // 17 йобибайт             2^80
  
// print_r ($bunits);

function RecalcSizeInfo($Direct,$Unit,$Size,$Dim=0,$ModeError=rvsTriggerError)
{
   $Result=Ok;
   return $Result;
}

function RecalcFromBytes($Unit,$Size,$precision = 2)
{
    $base = log($size, 1024);
    $suffixes = array('', 'K', 'M', 'G', 'T');   

    return round(pow(1024, $base - floor($base)), $precision) .' '. $suffixes[floor($base)];
}

//echo formatBytes(24962496);
// 23.81M

//echo formatBytes(24962496, 0);
// 24M

//echo formatBytes(24962496, 4);
// 23.8061M

function RecalcToBytes($Unit,$Size,$value) 
{
    $unit = strtolower(substr($value, -1, 1));
    return (int) $value * pow(1024, array_search($unit, array(1 =>'k','m','g')));
}

// ***************************************************** RecalcSizeInfo.php *** 
