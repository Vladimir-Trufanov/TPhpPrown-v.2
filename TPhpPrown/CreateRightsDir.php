<?php namespace prown;
// PHP7/HTML5, EDGE/CHROME                          *** CreateRightsDir.php ***
// ****************************************************************************
// * TPhpPrown                      Создать каталог (проверить существование) *
// *                                                       и задать его права *
// *                                                                          *
// * v1.0, 11.12.2021                              Автор:       Труфанов В.Е. *
// * Copyright © 2018 tve                          Дата создания:  08.12.2021 *
// ****************************************************************************

// Функция CreateRightsDir создает каталог в файловой системе сервера (сайта) и
// определяет права каталога для пользователя, для его группы и всех остальных:
// на запись, чтение и выполнение. Если каталог уже существует, то функция 
// только выполняет попытку переопределить права. В завершение работы функция 
// сравнивает права, которые установились, с правами, которые должны были 
// установиться. Если желание не совпадает с фактом, то выдается сообщение об 
// ошибке или формируется исключение.
//
// Имя каталога задается по спецификации: имя задается вместе с относительным 
// или абсолютным путем, например:
//
// $imgDir="Gallery";  Здесь явно путь не указан, поэтому новый каталог "Gallery"
// создается в каталоге из которого запущен текущий PHP-сценарий.

// Синтаксис:
//
//   $Result=CreateRightsDir($Dir,$modeDir=0777,$ModeError=rvsTriggerError);
//
// Параметры:
//
//   $Dir - спецификация создаваемого каталога, то есть абсолютный или 
//      относительный путь к каталогу и имя каталога;
//   $modeDir - параметр назначения прав каталога. Это восьмеричное число,
//      состоящее из четырех цифр: первая цифра всегда равна нулю (так как 
//      указывает восьмеричное число); вторая цифра указывает разрешения для 
//      владельца каталога; третья цифра указывает разрешения для группы 
//      пользователей владельца; четвертая цифра указывает разрешения для всех 
//      остальных. Возможные значения: 1 = выполнение, 2 = право на запись,
//      4 = разрешения на чтение (суммы значений дают возможность установить
//      несколько разрешений)
//   $ModeError - режим вывода сообщений об ошибке (по умолчанию сообщение 
//      выводится через исключение с пользовательской ошибкой на сайте 
//      doortry.ru)
//
// Возвращаемое значение: 
//
//   ----$Result - пересчитанное значение размерности (float); текст сообщения об 
//      ошибке (string) при $ModeError=rvsReturn или true/false в случае 
//      успешного/неуспешного выполнения функции при $ModeError<>rvsReturn
//
// Зарегистрированные ошибки/исключения:
//   
//   ----RecalcDirectIncorrect - "Неверно указано направление пересчета";
//   ----UnitMeasureIncorrect  - "Неверно указана единица измерения"

require_once 'iniConstMem.php';
require_once 'iniErrMessage.php';
require_once 'MakeUserError.php';

// ****************************************************************************
// *       Создать каталог (проверить существование) и задать его права       *
// ****************************************************************************
function CreateRightsDir($Dir,$modeDir=0777,$ModeError=rvsTriggerError)
// https://habr.com/ru/sandbox/124577/ - хорошая статья про удаление каталога 
{
   
   // Если каталога нет, то будем создавать его
   ConsoleLog('$Dir='.$Dir); 
   if (!is_dir($Dir))
   {
      ConsoleLog('Каталога нет, будем создавать его!'); 
      // Создаем каталог
      if (!mkdir($Dir))
      {
         //prown\ConsoleLog('Ошибка создания каталога: '.$Dir);
         ConsoleLog('Ошибка создания каталога: '.$Dir);
      }
      // И отдельно (чтобы сработало на старых Windows) задаем права
      else
      {
         if (!chmod($Dir,$modeDir))
         {
           ConsoleLog('Ошибка назначения прав каталога: '.$Dir);
         }
      }
   }
   // Если каталог существует, то будем проверять его права
   else
   {
      ConsoleLog('Каталог существует, будем проверять его права!'); 
   }
   
   return 'ajOk';
}

/*
function is_octal($x) 
{
   return !(decoct(octdec($x)) == $x);
   
   // В следующих примерах показан вывод значений в консоль:
   
   $x=0123;
   prown\ConsoleLog(decoct(octdec($x)));     // =   3
   prown\ConsoleLog($x);                     // =  83
   $x=123;
   prown\ConsoleLog(decoct(octdec($x)));     // = 123
   prown\ConsoleLog($x);                     // = 123
   
}
*/


// **************************************************** CreateRightsDir.php ***
